generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model User {
  userId       Int             @id @default(autoincrement())
  name         String
  email        String          @unique
  point        Int             @default(0)
  couponIssues CouponIssue[]
}

model PointHistory {
  id        Int      @id @default(autoincrement())
  amount     Int
  type      String
  createdAt DateTime @default(now())
  userId Int
}

model Product {
  productId     Int             @id @default(autoincrement())
  name          String
  category      String
  brand         String
}

model ProductStat {
  id        Int      @id @default(autoincrement())
  date      DateTime
  sales     Int

  productId Int

  @@unique([productId, date])
}

model ProductOption {
  optionId  Int     @id @default(autoincrement())
  optionName      String
  stock     Int
  price     Int

  productId Int
}

model Coupon {
  couponId     Int           @id @default(autoincrement())
  type         String
  benefit      Int
  maxDiscount  Int
  minPrice     Int

  couponIssues CouponIssue[]
}

model CouponIssue {
  couponIssueId Int      @id @default(autoincrement())
  used          Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  couponId Int
  userId   Int

  coupon Coupon @relation(fields: [couponId], references: [couponId])
  user   User   @relation(fields: [userId], references: [userId])
}

model CouponLimit {
  id        Int      @id @default(autoincrement())
  limit     Int
  issued    Int      @default(0)

    couponId Int
  
    @@unique([couponId])
  }
model Order {
  orderId      Int      @id @default(autoincrement())
  quantity     Int
  originalPrice Int
  address      String
  status       String
  name        String
  category     String
  brand        String
  optionName   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId         Int
  productId      Int
  optionId       Int
}

model Purchase {
  purchaseId    Int    @id @default(autoincrement())
  finalPrice    Int
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userId        Int
  orderId       Int
  couponIssueId Int
}